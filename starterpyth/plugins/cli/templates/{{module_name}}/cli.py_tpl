"""Core shell application.
Parse arguments and logger, use translated strings.
"""
{% include 'header.py_inc' %}
from {{ module_name }}.translation import ugettext as _
import {{ module_name }}.log
import logging
import logging.config
import {% if pyversion <= 2.6 %}optparse{% else %}argparse{% endif %}


def main():
    """Main function, intended for use as command line executable.

    >>> main()
    'Hello world!'
    0

    Args:
        None
    Returns:
      * :class:`int`: 0 in case of success, != 0 if something went wrong

    """
    {% if pyversion <= 2.6 %}parser = optparse.OptionParser()
    parser.add_option('-v', '--verbose', action='store_true', help='print more messages', default=False)
    parser.add_option('-d', '--debug', action='store_true', help='print debug messages', default=False)
    options, args = parser.parse_args()
    {% else %}parser = argparse.ArgumentParser(description=_('Sample command line interface'))
    parser.add_argument('-v', '--verbose', action='store_true', help='print more messages', default=False)
    parser.add_argument('-d', '--debug', action='store_true', help='print debug messages', default=False)
    args = parser.parse_args(){% endif %}
    log_config = {{ module_name }}.log.CONSOLE
    if {% if pyversion <= 2.6 %}options{% else %}args{% endif %}.debug:
        log_config['root']['level'] = 'DEBUG'
    elif {% if pyversion <= 2.6 %}options{% else %}args{% endif %}.verbose:
        log_config['root']['level'] = 'INFO'
    logging.config.dictConfig(log_config)
    logging.debug(_('Enter debug mode.'))
    logging.debug(_('Start of main function.'))
    return_code = 0  # 0 = success, != 0 = error

    # TODO complete this function
    # use _ to translate strings
    logging.info(_('Here is the code'))
    print(_('Hello, world!'))

    logging.debug(_('Bye.'))
    return return_code

if __name__ == '__main__':
    import doctest
    doctest.testmod()

